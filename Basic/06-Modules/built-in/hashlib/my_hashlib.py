# -*- coding:utf-8 -*-


# hashlib
# Python的hashlib提供了常见的摘要算法，如MD5，SHA1等等
# 比SHA1更安全的算法是SHA256和SHA512，不过越安全的算法越慢，而且摘要长度更长。

# 摘要算法又称哈希算法、散列算法。
# 它通过一个函数，把任意长度的数据转换为一个长度固定的数据串（通常用16进制的字符串表示）。
# 摘要算法就是通过摘要函数f()对任意长度的数据data计算出固定长度的摘要digest，目的是为了发现原始数据是否被人篡改过
# 摘要算法能指出数据是否被篡改过，是因为摘要函数是一个单向函数，计算f(data)容易，但通过digest反推data却非常困难。
# 而且，对原始数据做一个bit的修改，都会导致计算出的摘要完全不同。


# 碰撞：
# 两个不同的数据通过某个摘要算法得到了相同的摘要是完全有可能的，
# 因为任何摘要算法都是把无限多的数据集合映射到一个有限的集合中。


# 摘要算法应用
# 任何允许用户登录的网站都会存储用户登录的用户名和口令。方法是存到数据库表中
# name    | password
# --------+----------
# michael | 123456
# bob     | abc999
# alice   | alice2008
# 如果以明文保存用户口令，如果数据库泄露，所有用户的口令就落入黑客的手里
# 正确的保存口令的方式是不存储用户的明文口令，而是存储用户口令的摘要，比如MD5
# 存储MD5的好处是即使运维人员能访问数据库，也无法获知用户的明文口令
# username | password
# ---------+---------------------------------
# michael  | e10adc3949ba59abbe56e057f20f883e
# bob      | 878ef96e86145580c38c87f0410ad153
# alice    | 99b1c2188db85afee403b1536010c2c9
